import os
import openai
import re
import webbrowser
from pygments import highlight
from pygments.lexers import PythonLexer
from pygments.formatters import HtmlFormatter
# 

openai.api_key = os.getenv("OPENAI_API_KEY")

def showCode(myCode):
    code = myCode
    if(len(code) == 0): return
    highlighted_code = highlight(code, PythonLexer(), HtmlFormatter())

    # Save the highlighted code to a file
    # Get the CSS styles generated by the HtmlFormatter
    css_styles = HtmlFormatter().get_style_defs('.highlight')

    # Write the highlighted code and CSS styles to an HTML file
    with open('highlighted_code.html', 'w') as f:
        f.write(f'<style>{css_styles}</style>\n')
        f.write(highlighted_code)

    # Open the file in the default browser
    webbrowser.open('file://' + os.path.realpath('highlighted_code.html'))

msgs = []

def talk():
    completion = openai.ChatCompletion.create(
        model="gpt-3.5-turbo",
        messages=msgs,
        temperature=0.1
    )
    print("AI: " + completion.choices[0].message.content + '\n')
    code_snippets = re.findall(r"```(.*?)```", completion.choices[0].message.content, re.DOTALL)
    showCode("\n## -------- End of snippet ----------\n".join(code_snippets))
    return completion.choices[0].message


os.system('cls' if os.name == 'nt' else 'clear')
print("Hi, I'm a chatbot. Ask me anything. Type 'reset' to clear the screen.")

while 1:
    my_msg = input("[" + str(len(msgs)) + "] > ")
    if my_msg == "reset":
        os.system('cls' if os.name == 'nt' else 'clear')
        print("Alright Lets start over. Ask me anything. Type 'reset' to clear the screen.")
        msgs = []
        continue
    msgs.append({"role": "user", "content": my_msg})
    reply = talk()
    msgs.append(reply)
